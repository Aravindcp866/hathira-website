{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon, EllipsisVerticalIcon, PlugIcon} from '@sanity/icons'\nimport {MenuButton, MenuDivider} from '@sanity/ui'\nimport {Box, Button, Card, Flex, Menu, MenuItem, Stack, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  Fragment,\n  isValidElement,\n  memo,\n  startTransition,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type MouseEventHandler,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {v4 as uuid} from 'uuid'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementChildTarget,\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayPluginDefinition,\n  OverlayPluginExclusiveDefinition,\n  OverlayPluginHudDefinition,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n  VisualEditingNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {PopoverBackground} from './PopoverPortal'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  id: string\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n  targets: ElementChildTarget[]\n  elementType: 'element' | 'group'\n  onActivateExclusivePlugin?: (\n    plugin: OverlayPluginExclusiveDefinition,\n    context: OverlayComponentResolverContext,\n  ) => void\n  onMenuOpenChange: (open: boolean) => void\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst HUD = styled(Flex)`\n  top: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  gap: 4px;\n  padding: 4px 0;\n  flex-wrap: wrap;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    top: calc(100% + 2rem);\n  }\n`\n\nconst MenuWrapper = styled(Flex)`\n  margin: -0.5rem;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst ExclusivePluginContainer = styled.div`\n  position: absolute;\n  inset: 0;\n  pointer-events: all;\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace, perspective} = node\n\n  const [url, search] = createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: path ? pathToUrlString(studioPath.fromString(path)) : [],\n  }).split('?')\n  const searchParams = new URLSearchParams(search)\n  const resolvedPerspective = perspective || searchParams.get('perspective')\n  if (resolvedPerspective === 'drafts') {\n    // 'drafts' is not a valid search param in the studio URL, having no `perspective` is the same as 'drafts'\n    searchParams.delete('perspective')\n  } else if (resolvedPerspective) {\n    searchParams.set('perspective', resolvedPerspective)\n  }\n  return `${url}?${searchParams}`\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {\n    id,\n    element,\n    focused,\n    componentResolver,\n    node,\n    showActions,\n    draggable,\n    targets,\n    elementType,\n    comlink,\n    onActivateExclusivePlugin,\n    onMenuOpenChange,\n  } = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const resolverContexts = useMemo<{\n    legacyComponentContext: OverlayComponentResolverContext | undefined\n    pluginContexts: OverlayComponentResolverContext[]\n  }>(() => {\n    function getContext(\n      node: SanityNode | SanityStegaNode,\n      nodeElement?: ElementNode,\n    ): OverlayComponentResolverContext | undefined {\n      const schemaType = getType(node)\n      const {field, parent} = getField(node)\n      if (!('id' in node)) return undefined\n      if (!field || !schemaType) return undefined\n      const type = field.value.type\n      return {\n        document: schemaType,\n        element,\n        targetElement: nodeElement || element,\n        field,\n        focused: !!focused,\n        node,\n        parent,\n        type,\n      }\n    }\n    return {\n      legacyComponentContext: elementType === 'element' ? getContext(node) : undefined,\n      pluginContexts: targets\n        .map((target) => getContext(target.sanity, target.element))\n        .filter((ctx) => ctx !== undefined),\n    }\n  }, [elementType, node, targets, getType, getField, element, focused])\n\n  const customComponents = useCustomComponents(\n    resolverContexts.legacyComponentContext,\n    componentResolver,\n  )\n\n  const nodePluginCollections = useResolvedNodePlugins(\n    resolverContexts.pluginContexts,\n    props.plugins,\n  )\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  const menuId = useId()\n\n  const hasMenuitems = nodePluginCollections?.some(\n    (nodePluginCollection) => nodePluginCollection.exclusive.length > 0,\n  )\n  const showMenu = hasMenuitems || nodePluginCollections?.length > 1\n\n  const handleLabelClick = useCallback(() => {\n    window.dispatchEvent(new CustomEvent('sanity-overlay/label-click', {detail: {id}}))\n  }, [id])\n\n  return (\n    <>\n      <PointerEvents>\n        {showActions ? (\n          <Actions gap={1} paddingY={1}>\n            <Link href={href} />\n          </Actions>\n        ) : null}\n        {(title || showMenu) && (\n          <Tab gap={1} paddingY={1} onClick={handleLabelClick}>\n            <Labels gap={2} padding={2}>\n              {draggable && (\n                <Box marginRight={1}>\n                  <Text className=\"drag-handle\" size={0}>\n                    <DragHandleIcon />\n                  </Text>\n                </Box>\n              )}\n              <Text size={0}>{icon}</Text>\n\n              {title && (\n                <Text size={1} weight=\"medium\">\n                  {title}\n                </Text>\n              )}\n\n              {showMenu && (\n                <Box\n                  paddingLeft={2}\n                  onClick={(e) => {\n                    // Do not propagate and click the label too if clicking menu button\n                    e.stopPropagation()\n                  }}\n                >\n                  <MenuWrapper>\n                    <MenuButton\n                      id={menuId}\n                      popover={{\n                        animate: true,\n                        placement: 'bottom-start',\n                        constrainSize: true,\n                        tone: 'default',\n                      }}\n                      onOpen={() => {\n                        onMenuOpenChange?.(true)\n                      }}\n                      onClose={() => {\n                        onMenuOpenChange?.(false)\n                      }}\n                      button={<Button icon={EllipsisVerticalIcon} tone=\"primary\" padding={2} />}\n                      menu={\n                        <Menu paddingY={0}>\n                          <PointerEvents>\n                            {nodePluginCollections?.map((nodePluginCollection, index) => (\n                              <Fragment key={nodePluginCollection.id}>\n                                <Stack role=\"group\" paddingY={1} space={0}>\n                                  <MenuItem\n                                    paddingY={2}\n                                    text={\n                                      <Box paddingY={2}>\n                                        <Text muted size={1} style={{textTransform: 'capitalize'}}>\n                                          {`${nodePluginCollection.context.document.name}: ${nodePluginCollection.context.field?.name}`}\n                                        </Text>\n                                      </Box>\n                                    }\n                                    onClick={() => {\n                                      if (nodePluginCollection.context.node) {\n                                        comlink?.post(\n                                          'visual-editing/focus',\n                                          nodePluginCollection.context.node,\n                                        )\n                                      }\n                                    }}\n                                  />\n                                  {nodePluginCollection.exclusive.map((exclusive) => {\n                                    const Component = exclusive.component\n                                    if (!Component) return null\n                                    return (\n                                      <MenuItem\n                                        paddingY={2}\n                                        key={exclusive.name}\n                                        icon={exclusive.icon || <PlugIcon />}\n                                        text={\n                                          <Box paddingY={2}>\n                                            <Text size={1}>\n                                              {exclusive.title || exclusive.name}\n                                            </Text>\n                                          </Box>\n                                        }\n                                        onClick={() =>\n                                          onActivateExclusivePlugin?.(\n                                            exclusive,\n                                            nodePluginCollection.context,\n                                          )\n                                        }\n                                      />\n                                    )\n                                  })}\n                                </Stack>\n                                {index < nodePluginCollections.length - 1 && <MenuDivider />}\n                              </Fragment>\n                            ))}\n                          </PointerEvents>\n                        </Menu>\n                      }\n                    />\n                  </MenuWrapper>\n                </Box>\n              )}\n            </Labels>\n          </Tab>\n        )}\n\n        <HUD>\n          {nodePluginCollections?.map((nodePluginCollection) => (\n            <Fragment key={nodePluginCollection.id}>\n              {nodePluginCollection.hud.map((hud) => {\n                const Component = hud.component\n                if (!Component) return null\n                return <Component key={hud.name} {...nodePluginCollection.context} />\n              })}\n            </Fragment>\n          ))}\n        </HUD>\n      </PointerEvents>\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component\n                key={i}\n                PointerEvents={PointerEvents}\n                {...resolverContexts.legacyComponentContext!}\n                {...props}\n              />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(\n  props: Omit<ElementOverlayProps, 'setActiveExclusivePlugin' | 'onMenuOpenChange'>,\n) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  const [activeExclusivePlugin, setActiveExclusivePlugin] = useState<{\n    plugin: OverlayPluginExclusiveDefinition\n    context: OverlayComponentResolverContext\n  } | null>(null)\n\n  const closeExclusivePluginView = useCallback(() => {\n    setActiveExclusivePlugin(null)\n    window.dispatchEvent(new CustomEvent('sanity-overlay/exclusive-plugin-closed'))\n  }, [])\n\n  const onActivateExclusivePlugin = useCallback(\n    (plugin: OverlayPluginExclusiveDefinition, context: OverlayComponentResolverContext) => {\n      setActiveExclusivePlugin({plugin, context})\n    },\n    [],\n  )\n\n  const handleExclusivePluginClick: MouseEventHandler<HTMLDivElement> = (event) => {\n    event.stopPropagation()\n  }\n\n  const ExclusivePluginComponent = activeExclusivePlugin?.plugin.component\n\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  useEffect(() => {\n    startTransition(() => setMenuOpen(false))\n  }, [hovered])\n\n  return (\n    <>\n      {menuOpen || ExclusivePluginComponent ? (\n        <PopoverBackground onDismiss={closeExclusivePluginView} blockScroll={menuOpen} />\n      ) : null}\n      <Root\n        data-focused={focused ? '' : undefined}\n        data-hovered={hovered ? '' : undefined}\n        data-flipped={isNearTop ? '' : undefined}\n        data-draggable={draggable ? '' : undefined}\n        data-menu-open={menuOpen ? '' : undefined}\n        ref={ref}\n        style={style}\n      >\n        {ExclusivePluginComponent ? (\n          <ExclusivePluginContainer\n            data-sanity-overlay-element\n            onClick={handleExclusivePluginClick}\n          >\n            <ExclusivePluginComponent\n              {...activeExclusivePlugin.context}\n              closeExclusiveView={closeExclusivePluginView}\n            />\n          </ExclusivePluginContainer>\n        ) : hovered ? (\n          <ElementOverlayInner\n            {...props}\n            onActivateExclusivePlugin={onActivateExclusivePlugin}\n            onMenuOpenChange={setMenuOpen}\n          />\n        ) : null}\n      </Root>\n    </>\n  )\n})\n\ninterface NodePluginCollection {\n  id: string\n  context: OverlayComponentResolverContext\n  hud: OverlayPluginHudDefinition[]\n  exclusive: OverlayPluginExclusiveDefinition[]\n}\n\nfunction useResolvedNodePlugins(\n  componentContexts: OverlayComponentResolverContext[],\n  plugins?: OverlayPluginDefinition[],\n) {\n  return useMemo(\n    () =>\n      componentContexts.map((componentContext) => {\n        const instance: NodePluginCollection = {\n          id: uuid(),\n          context: componentContext,\n          hud: [],\n          exclusive: [],\n        }\n\n        plugins?.forEach((plugin) => {\n          if (!plugin.guard?.(componentContext)) return\n          if (plugin.type === 'hud') instance.hud.push(plugin)\n          if (plugin.type === 'exclusive') instance.exclusive.push(plugin)\n        })\n\n        return instance\n      }),\n    [componentContexts, plugins],\n  )\n}\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n          targets: message.targets,\n          elementType: message.elementType,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {\n            ...e,\n            sanity: message.sanity,\n            rect: message.rect,\n            targets: message.targets,\n            elementType: message.elementType,\n          }\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/reset-mouse-state':\n      return elements.map((e) => {\n        return {...e, focused: false, hovered: false}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!sanity || !('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  OverlayPluginDefinition,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    startTransition(() =>\n      setUniqueIds((prev) => {\n        const next = Array.from(new Set(documentIds))\n        return prev.length === next.length &&\n          prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n          ? prev\n          : next\n      }),\n    )\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport function Overlays(props: {\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}): React.JSX.Element {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    let altPressed = false\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e) && altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        // Don't handle Alt if it's part of a complex shortcut\n        if (e.ctrlKey || e.metaKey || e.shiftKey) {\n          return\n        }\n\n        if (!altPressed) {\n          altPressed = true\n          setOverlayEnabled((enabled) => !enabled)\n        }\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    // Reset Alt state if window loses focus\n    const handleWindowBlur = () => {\n      if (altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled) // Toggle back\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    window.addEventListener('blur', handleWindowBlur)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n      window.removeEventListener('blur', handleWindowBlur)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      startTransition(() => {\n        setOverlaysFlash(false)\n        setFadingOut(false)\n      })\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  /**\n   * 'showActions' is a bit of a misnomer, it only shows the \"Open in Studio\" link, it's separate from the custom overlays and custom actions.\n   * The \"Open in Studio\" link should be visible in all, but one, scenarios:\n   * When inside Presentation Tool, and its preview iframe, it doesn't make sense to show the \"Open in Studio\" link,\n   * since we're already in the studio.\n   */\n  const [shouldHideActions, setShouldHideActions] = useState(false)\n  if (!shouldHideActions && inFrame && comlinkStatus === 'connected') {\n    setShouldHideActions(true)\n  }\n\n  const elementsToRender = useMemo(() => {\n    if (isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled, targets, elementType}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            comlink={comlink}\n            componentResolver={componentResolver}\n            plugins={props.plugins}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            id={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            showActions={!shouldHideActions}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n            targets={targets}\n            elementType={elementType}\n          />\n        )\n      })\n  }, [\n    comlink,\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    isDragging,\n    optimisticActorReady,\n    props.plugins,\n    shouldHideActions,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {startTransition, useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    startTransition(() => setNode(instance))\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      startTransition(() => setNode(undefined))\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {startTransition, useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, plugins, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    startTransition(() => {\n      setInFrame(isMaybePreviewIframe())\n      setInPopUp(isMaybePreviewWindow())\n    })\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    startTransition(() => setPortalElement(node))\n    return () => {\n      startTransition(() => setPortalElement(null))\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          plugins={plugins}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","t4","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","hotkeys","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","getBoundingClientRect","height","contextMenuReferenceElement","t6","minWidth","maxWidth","t7","t8","t9","t10","t11","i","t12","t13","t14","t15","t16","t17","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Flex","HUD","MenuWrapper","Tab","ActionOpen","Labels","ExclusivePluginContainer","div","createIntentLink","baseUrl","tool","workspace","perspective","url","createEditUrl","pathToUrlString","studioPath","fromString","split","URLSearchParams","resolvedPerspective","get","delete","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","targets","elementType","onActivateExclusivePlugin","onMenuOpenChange","getType","previewSnapshots","bb0","find","_id","node_0","nodeElement","schemaType_0","value","targetElement","getContext","legacyComponentContext","pluginContexts","resolverContexts","customComponents","useCustomComponents","nodePluginCollections","useResolvedNodePlugins","plugins","__html","menuId","useId","_temp2","showMenu","handleLabelClick","_temp3","animate","tone","EllipsisVerticalIcon","nodePluginCollection_0","index","Fragment","textTransform","nodePluginCollection","exclusive","MenuDivider","_temp4","Array","isArray","Component_1","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","activeExclusivePlugin","setActiveExclusivePlugin","closeExclusivePluginView","plugin","handleExclusivePluginClick","_temp5","ExclusivePluginComponent","menuOpen","setMenuOpen","startTransition","t18","t19","t20","componentContexts","componentContext","instance","uuid","hud","forEach","guard","resolved","_temp6","Link","useSyncExternalStore","_temp7","_temp8","ctx","stopPropagation","nodePluginCollection_1","Component_0","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","max","offset_3","offset_4","background","borderRadius","zIndex","$scaleFactor","$width","$height","clamp","number","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","l","listener","add","store","SharedStateProvider","catch","value_0","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","altPressed","handleKeyUp","isAltKey","handleKeydown","ctrlKey","metaKey","shiftKey","isHotkey","handleWindowBlur","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp9","closeContextMenu","shouldHideActions","setShouldHideActions","_temp0","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","studioTheme","t26","e_1","enabled_3","enabled_2","enabled_1","enabled_0","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","newEvent","MouseEvent","bubbles","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}